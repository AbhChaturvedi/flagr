// Code generated by go-swagger; DO NOT EDIT.

package evaluation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/checkr/flagr/swagger_gen/models"
)

// PostEvalOKCode is the HTTP code returned for type PostEvalOK
const PostEvalOKCode int = 200

/*PostEvalOK evaluation result

swagger:response postEvalOK
*/
type PostEvalOK struct {

	/*
	  In: Body
	*/
	Payload *models.EvalResult `json:"body,omitempty"`
}

// NewPostEvalOK creates PostEvalOK with default headers values
func NewPostEvalOK() *PostEvalOK {
	return &PostEvalOK{}
}

// WithPayload adds the payload to the post eval o k response
func (o *PostEvalOK) WithPayload(payload *models.EvalResult) *PostEvalOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post eval o k response
func (o *PostEvalOK) SetPayload(payload *models.EvalResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEvalOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostEvalDefault generic error response

swagger:response postEvalDefault
*/
type PostEvalDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostEvalDefault creates PostEvalDefault with default headers values
func NewPostEvalDefault(code int) *PostEvalDefault {
	if code <= 0 {
		code = 500
	}

	return &PostEvalDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post eval default response
func (o *PostEvalDefault) WithStatusCode(code int) *PostEvalDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post eval default response
func (o *PostEvalDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post eval default response
func (o *PostEvalDefault) WithPayload(payload *models.Error) *PostEvalDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post eval default response
func (o *PostEvalDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEvalDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
