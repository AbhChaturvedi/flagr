---
swagger: "2.0"
info:
  description: Flagr is a feature flagging, A/B testing and dynamic configuration microservice
  title: Flagr
  version: 1.0.0
consumes:
- application/json
produces:
- application/json
schemes:
- http
basePath: "/api/v1"
paths:
  /flags:
    $ref: ./flags.yaml
  /flags/{flagID}:
    $ref: ./flag.yaml
  /flags/{flagID}/enabled:
    $ref: ./flag_enabled.yaml
  /flags/{flagID}/variants:
    $ref: ./flag_variants.yaml
  /flags/{flagID}/variants/{variantID}:
    $ref: ./flag_variant.yaml
  /flags/{flagID}/segments:
    $ref: ./flag_segments.yaml
  /flags/{flagID}/segments/{segmentID}/constraints:
    $ref: ./flag_segment_constraints.yaml
  /flags/{flagID}/segments/{segmentID}/constraints/{constraintID}:
    $ref: ./flag_segment_constraint.yaml
  /flags/{flagID}/segments/{segmentID}/distributions:
    $ref: ./flag_segment_distributions.yaml
  /evaluation:
    $ref: ./evaluation.yaml
definitions:
  # Flag
  flag:
    type: object
    required:
      - description
      - enabled
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        readOnly: true
      description:
        type: string
        minLength: 1
      enabled:
        type: boolean
      segments:
        type: array
        items:
          $ref: "#/definitions/segment"
      variants:
        type: array
        items:
          $ref: "#/definitions/variant"
  createFlagRequest:
    type: object
    required:
      - description
    properties:
      description:
        type: string
        minLength: 1
  putFlagRequest:
    type: object
    required:
      - description
    properties:
      description:
        type: string
        minLength: 1
  setFlagEnabledRequest:
    type: object
    required:
      - enabled
    properties:
      enabled:
        type: boolean

  # Segment
  segment:
    type: object
    required:
      - description
      - rank
      - rolloutPercent
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        readOnly: true
      description:
        type: string
        minLength: 1
      constraints:
        type: array
        items:
          $ref: "#/definitions/constraint"
      distributions:
        type: array
        items:
          $ref: "#/definitions/distribution"
      rank:
        type: integer
        format: int64
        minimum: 0
      rolloutPercent:
        type: integer
        format: int64
        minimum: 0
        maximum: 100
  createSegmentRequest:
    type: object
    required:
      - description
      - rolloutPercent
    properties:
      description:
        type: string
        minLength: 1
      rolloutPercent:
        type: integer
        format: int64
        minimum: 0
        maximum: 100

  # Variant
  variant:
    type: object
    required:
      - key
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        readOnly: true
      key:
        type: string
        minLength: 1
      attachment:
        type: object
  createVariantRequest:
    type: object
    required:
      - key
    properties:
      key:
        type: string
        minLength: 1
      attachment:
        type: object
  putVariantRequest:
    type: object
    required:
      - key
      - attachment
    properties:
      key:
        type: string
        minLength: 1
      attachment:
        type: object

  # Constraint
  constraint:
    type: object
    required:
      - property
      - operator
      - value
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        readOnly: true
      property:
        type: string
        minLength: 1
      operator:
        type: string
        minLength: 1
        enum:
          - "EQ"
          - "NEQ"
          - "LT"
          - "LTE"
          - "GT"
          - "GTE"
          - "EREG"
          - "NEREG"
          - "IN"
          - "NOTIN"
          - "CONTAINS"
          - "NOTCONTAINS"
      value:
        type: string
        minLength: 1
  createConstraintRequest:
    type: object
    required:
      - property
      - operator
      - value
    properties:
      property:
        type: string
        minLength: 1
      operator:
        type: string
        minLength: 1
      value:
        type: string
        minLength: 1

  # Distribution
  distribution:
    type: object
    required:
      - percent
      - variantID
      - variantKey
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        readOnly: true
      percent:
        type: integer
        format: int64
        minimum: 0
        maximum: 100
      bitmap:
        type: string
        minLength: 1
      variantKey:
        type: string
        minLength: 1
      variantID:
        type: integer
        format: int64
        minimum: 1
  putDistributionsRequest:
    type: object
    required:
      - distributions
    properties:
      distributions:
        type: array
        items:
          $ref: "#/definitions/distribution"

  # Evaluation
  evalContext:
    type: object
    required:
      - entityID
      - entityType
      - flagID
    properties:
      entityID:
        type: string
        minLength: 1
      entityType:
        type: string
        minLength: 1
      entityContext:
        type: object
      enableDebug:
        type: boolean
      flagID:
        type: integer
        format: int64
        minimum: 1
  evalResult:
    type: object
    required:
      - flagID
      - segmentID
      - variantID
      - evalContext
      - timestamp
    properties:
      flagID:
        type: integer
        format: int64
        minimum: 1
      segmentID:
        type: integer
        format: int64
        minimum: 1
      variantID:
        type: integer
        format: int64
        minimum: 1
      evalContext:
        $ref: "#/definitions/evalContext"
      timestamp:
        type: string
        minLength: 1
      evalDebugLog:
        $ref: "#/definitions/evalDebugLog"
      variantAttachment:
        type: object
  evalDebugLog:
    type: object
    properties:
      segmentDebugLogs:
        type: array
        items:
          $ref: "#/definitions/segmentDebugLog"
      msg:
        type: string
  segmentDebugLog:
    type: object
    properties:
      segmentID:
        type: integer
        format: int64
        minimum: 1
      msg:
        type: string

  # Default Error
  error:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        minLength: 1
