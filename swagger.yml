---
swagger: "2.0"
info:
  description: Flagr is a feature flagging, A/B testing and dynamic configuration microservice
  title: Flagr
  version: 1.0.0
consumes:
- application/json
produces:
- application/json
schemes:
- http
basePath: "/api"
paths:
  /flags:
    get:
      tags:
        - flags
      operationId: findFlags
      responses:
        200:
          description: list all the flags
          schema:
            type: array
            items:
              $ref: "#/definitions/flag"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /eval:
    post:
      tags:
        - eval
      operationId: postEval
      parameters:
        - in: body
          name: body
          description: evalution context
          required: true
          schema:
            $ref: "#/definitions/evalContext"
      responses:
        200:
          description: evaluation result
          schema:
            $ref: "#/definitions/evalResult"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
definitions:
  flag:
    type: object
    required:
      - description
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      description:
        type: string
        minLength: 1
      segments:
        type: array
        items:
          $ref: "#/definitions/segment"
      variants:
        type: array
        items:
          $ref: "#/definitions/variant"
  segment:
    type: object
    required:
      - description
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      description:
        type: string
        minLength: 1
      constraints:
        type: array
        items:
          $ref: "#/definitions/constraint"
      distributions:
        type: array
        items:
          $ref: "#/definitions/distribution"
  variant:
    type: object
    required:
      - key
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      key:
        type: string
        minLength: 1
  constraint:
    type: object
    required:
      - property
      - operator
      - value
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      property:
        type: string
        minLength: 1
      operator:
        type: string
        minLength: 1
      value:
        type: string
        minLength: 1
  distribution:
    type: object
    required:
      - rank
      - percent
      - bitmap
      - variantID
      - variantKey
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      rank:
        type: integer
        format: int32
        minimum: 0
      percent:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
      bitmap:
        type: string
        minLength: 1
      variantKey:
        type: string
        minLength: 1
      variantID:
        type: integer
        format: int64
  evalContext:
    type: object
    required:
      - entityID
      - entityType
    properties:
      entityID:
        type: string
        minLength: 1
      entityType:
        type: string
        minLength: 1
      entityContext:
        type: object
      enableDebug:
        type: boolean
  evalResult:
    type: object
    required:
      - flagID
      - segmentID
      - variantID
      - evalContext
      - timestamp
    properties:
      flagID:
        type: integer
        format: int64
      segmentID:
        type: integer
        format: int64
      variantID:
        type: integer
        format: int64
      evalContext:
        $ref: "#/definitions/evalContext"
      timestamp:
        type: string
        minLength: 1
      evalDebugLog:
        $ref: "#/definitions/evalDebugLog"
  evalDebugLog:
    type: object
    properties:
      segmentDebugLogs:
        type: array
        items:
          $ref: "#/definitions/segmentDebugLog"
      msg:
        type: string
  segmentDebugLog:
    type: object
    properties:
      segmentID:
        type: integer
        format: int64
      msg:
        type: string
  error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
