---
swagger: "2.0"
info:
  description: Flagr is a feature flagging, A/B testing and dynamic configuration microservice
  title: Flagr
  version: 1.0.0
consumes:
- application/json
produces:
- application/json
schemes:
- http
basePath: "/api"
paths:
  /flags:
    get:
      tags:
        - flag
      operationId: findFlags
      responses:
        200:
          description: list all the flags
          schema:
            type: array
            items:
              $ref: "#/definitions/flag"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags:
        - flag
      operationId: createFlag
      parameters:
        - in: body
          name: body
          description: create a flag
          required: true
          schema:
            $ref: "#/definitions/createFlagRequest"
      responses:
        200:
          description: returns the created flag
          schema:
            $ref: "#/definitions/flag"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /flags/{flagID}:
    get:
      tags:
        - flag
      operationId: getFlag
      parameters:
        - in: path
          name: flagID
          description: numeric ID of the flag to get
          required: true
          type: integer
          format: int64
          minimum: 1
      responses:
        200:
          description: returns the flag
          schema:
            $ref: "#/definitions/flag"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    put:
      tags:
        - flag
      operationId: putFlag
      parameters:
        - in: path
          name: flagID
          description: numeric ID of the flag to get
          required: true
          type: integer
          format: int64
          minimum: 1
        - in: body
          name: body
          description: update a flag
          required: true
          schema:
            $ref: "#/definitions/putFlagRequest"
      responses:
        200:
          description: returns the flag
          schema:
            $ref: "#/definitions/flag"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
        - flag
      operationId: deleteFlag
      parameters:
        - in: path
          name: flagID
          description: numeric ID of the flag
          required: true
          type: integer
          format: int64
          minimum: 1
      responses:
        200:
          description: OK deleted
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /flags/{flagID}/enabled:
    put:
      tags:
        - flag
      operationId: setFlagEnabled
      parameters:
        - in: path
          name: flagID
          description: numeric ID of the flag to get
          required: true
          type: integer
          format: int64
          minimum: 1
        - in: body
          name: body
          description: set flag enabled state
          required: true
          schema:
            $ref: "#/definitions/setFlagEnabledRequest"
      responses:
        200:
          description: returns the flag
          schema:
            $ref: "#/definitions/flag"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /flags/{flagID}/variants:
    get:
      tags:
        - variant
      operationId: findVariants
      parameters:
        - in: path
          name: flagID
          description: numeric ID of the flag
          required: true
          type: integer
          format: int64
          minimum: 1
      responses:
        200:
          description: variant ordered by variantID
          schema:
            type: array
            items:
              $ref: "#/definitions/variant"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags:
        - variant
      operationId: createVariant
      parameters:
        - in: path
          name: flagID
          description: numeric ID of the flag
          required: true
          type: integer
          format: int64
          minimum: 1
        - in: body
          name: body
          description: create a variant
          required: true
          schema:
            $ref: "#/definitions/createVariantRequest"
      responses:
        200:
          description: variant just created
          schema:
            $ref: "#/definitions/variant"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /flags/{flagID}/segments:
    get:
      tags:
        - segment
      operationId: findSegments
      parameters:
        - in: path
          name: flagID
          description: numeric ID of the flag to get
          required: true
          type: integer
          format: int64
          minimum: 1
      responses:
        200:
          description: segments ordered by rank of the flag
          schema:
            type: array
            items:
              $ref: "#/definitions/segment"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags:
        - segment
      operationId: createSegment
      parameters:
        - in: path
          name: flagID
          description: numeric ID of the flag to get
          required: true
          type: integer
          format: int64
          minimum: 1
        - in: body
          name: body
          description: create a segment under a flag
          required: true
          schema:
            $ref: "#/definitions/createSegmentRequest"
      responses:
        200:
          description: segments ordered by rank of the flag
          schema:
            $ref: "#/definitions/segment"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /flags/{flagID}/segments/{segmentID}/constraints:
    get:
      tags:
        - constraint
      operationId: findConstraints
      parameters:
        - in: path
          name: flagID
          description: numeric ID of the flag
          required: true
          type: integer
          format: int64
          minimum: 1
        - in: path
          name: segmentID
          description: numeric ID of the segment
          required: true
          type: integer
          format: int64
          minimum: 1
      responses:
        200:
          description: constraints under the segment
          schema:
            type: array
            items:
              $ref: "#/definitions/constraint"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags:
        - constraint
      operationId: createConstraint
      parameters:
        - in: path
          name: flagID
          description: numeric ID of the flag
          required: true
          type: integer
          format: int64
          minimum: 1
        - in: path
          name: segmentID
          description: numeric ID of the segment
          required: true
          type: integer
          format: int64
          minimum: 1
        - in: body
          name: body
          description: create a constraint
          required: true
          schema:
            $ref: "#/definitions/createConstraintRequest"
      responses:
        200:
          description: the constraint created
          schema:
            $ref: "#/definitions/constraint"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /flags/{flagID}/segments/{segmentID}/distributions:
    get:
      tags:
        - distribution
      operationId: findDistributions
      parameters:
        - in: path
          name: flagID
          description: numeric ID of the flag
          required: true
          type: integer
          format: int64
          minimum: 1
        - in: path
          name: segmentID
          description: numeric ID of the segment
          required: true
          type: integer
          format: int64
          minimum: 1
      responses:
        200:
          description: distribution under the segment
          schema:
            type: array
            items:
              $ref: "#/definitions/distribution"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    put:
      tags:
        - distribution
      operationId: putDistributions
      description: replace the distribution with the new setting
      parameters:
        - in: path
          name: flagID
          description: numeric ID of the flag
          required: true
          type: integer
          format: int64
          minimum: 1
        - in: path
          name: segmentID
          description: numeric ID of the segment
          required: true
          type: integer
          format: int64
          minimum: 1
        - in: body
          name: body
          description: array of distributions
          required: true
          schema:
            $ref: "#/definitions/putDistributionsRequest"
      responses:
        200:
          description: distribution under the segment
          schema:
            type: array
            items:
              $ref: "#/definitions/distribution"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /evaluation:
    post:
      tags:
        - evaluation
      operationId: postEvaluation
      parameters:
        - in: body
          name: body
          description: evalution context
          required: true
          schema:
            $ref: "#/definitions/evalContext"
      responses:
        200:
          description: evaluation result
          schema:
            $ref: "#/definitions/evalResult"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
definitions:
  createFlagRequest:
    type: object
    required:
      - description
    properties:
      description:
        type: string
        minLength: 1
  putFlagRequest:
    type: object
    required:
      - description
    properties:
      description:
        type: string
        minLength: 1
  setFlagEnabledRequest:
    type: object
    required:
      - enabled
    properties:
      enabled:
        type: boolean
  createSegmentRequest:
    type: object
    required:
      - description
      - rolloutPercent
    properties:
      description:
        type: string
        minLength: 1
      rolloutPercent:
        type: integer
        format: int64
        minimum: 0
        maximum: 100
  createVariantRequest:
    type: object
    required:
      - key
    properties:
      key:
        type: string
        minLength: 1
      attachment:
        type: object
  createConstraintRequest:
    type: object
    required:
      - property
      - operator
      - value
    properties:
      property:
        type: string
        minLength: 1
      operator:
        type: string
        minLength: 1
      value:
        type: string
        minLength: 1
  putDistributionsRequest:
    type: object
    required:
      - distributions
    properties:
      distributions:
        type: array
        items:
          $ref: "#/definitions/distribution"
  flag:
    type: object
    required:
      - description
      - enabled
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        readOnly: true
      description:
        type: string
        minLength: 1
      enabled:
        type: boolean
      segments:
        type: array
        items:
          $ref: "#/definitions/segment"
      variants:
        type: array
        items:
          $ref: "#/definitions/variant"
  segment:
    type: object
    required:
      - description
      - rank
      - rolloutPercent
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        readOnly: true
      description:
        type: string
        minLength: 1
      constraints:
        type: array
        items:
          $ref: "#/definitions/constraint"
      distributions:
        type: array
        items:
          $ref: "#/definitions/distribution"
      rank:
        type: integer
        format: int64
        minimum: 0
      rolloutPercent:
        type: integer
        format: int64
        minimum: 0
        maximum: 100
  variant:
    type: object
    required:
      - key
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        readOnly: true
      key:
        type: string
        minLength: 1
      attachment:
        type: object
  constraint:
    type: object
    required:
      - property
      - operator
      - value
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        readOnly: true
      property:
        type: string
        minLength: 1
      operator:
        type: string
        minLength: 1
        enum:
          - "EQ"
          - "NEQ"
          - "LT"
          - "LTE"
          - "GT"
          - "GTE"
          - "EREG"
          - "NEREG"
          - "IN"
          - "NOTIN"
          - "CONTAINS"
          - "NOTCONTAINS"
      value:
        type: string
        minLength: 1
  distribution:
    type: object
    required:
      - percent
      - variantID
      - variantKey
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        readOnly: true
      percent:
        type: integer
        format: int64
        minimum: 0
        maximum: 100
      bitmap:
        type: string
        minLength: 1
      variantKey:
        type: string
        minLength: 1
      variantID:
        type: integer
        format: int64
        minimum: 1
  evalContext:
    type: object
    required:
      - entityID
      - entityType
      - flagID
    properties:
      entityID:
        type: string
        minLength: 1
      entityType:
        type: string
        minLength: 1
      entityContext:
        type: object
      enableDebug:
        type: boolean
      flagID:
        type: integer
        format: int64
        minimum: 1
  evalResult:
    type: object
    required:
      - flagID
      - segmentID
      - variantID
      - evalContext
      - timestamp
    properties:
      flagID:
        type: integer
        format: int64
        minimum: 1
      segmentID:
        type: integer
        format: int64
        minimum: 1
      variantID:
        type: integer
        format: int64
        minimum: 1
      evalContext:
        $ref: "#/definitions/evalContext"
      timestamp:
        type: string
        minLength: 1
      evalDebugLog:
        $ref: "#/definitions/evalDebugLog"
      variantAttachment:
        type: object
  evalDebugLog:
    type: object
    properties:
      segmentDebugLogs:
        type: array
        items:
          $ref: "#/definitions/segmentDebugLog"
      msg:
        type: string
  segmentDebugLog:
    type: object
    properties:
      segmentID:
        type: integer
        format: int64
        minimum: 1
      msg:
        type: string
  error:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        minLength: 1
